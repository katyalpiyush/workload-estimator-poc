<mxfile host="65bd71144e">
    <diagram id="mmnEbl0gjILGWMQl6t8d" name="Page-1">
        <mxGraphModel dx="20973" dy="6053" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" background="none" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="7" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=35;fontColor=#000000;spacing=15;rounded=1;" edge="1" parent="1" source="2" target="5">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="&lt;font style=&quot;font-size: 22px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;What are we estimating?&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-620" y="120" width="360" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="4" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;spacing=15;rounded=1;" edge="1" parent="1" source="6" target="2">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-440" y="30" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="13" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" edge="1" parent="1" source="5" target="12">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;There are 5 types of resources that are (may or may not be) used by different services configured in a cluster:&lt;br&gt;&lt;/font&gt;&lt;ol style=&quot;line-height: 150%;&quot;&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;RAM&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;CPU&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Disk Space&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Disk IO&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Network&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;We are estimating the most optimal amount of these resources which are required by each service configured in the cluster.&lt;br&gt;The workload and hardware configurations will be provided by the user. Based on the estimated amounts of resources and the available hardware we calculate the total no. of nodes required by each service group (based on the limiting factor among all the resources). We have the following 6 services over which the cluster is configured:&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Data&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Index&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Query&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Search&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Eventing&lt;/font&gt;&lt;/li&gt;&lt;li&gt;Analytics&lt;/li&gt;&lt;/ol&gt;&lt;/font&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;fontSize=22;align=left;spacing=15;" vertex="1" parent="1">
                    <mxGeometry x="-772.5" y="260" width="665" height="600" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;h1 style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot; style=&quot;font-size: 35px;&quot;&gt;workload-estimator-poc&lt;/font&gt;&lt;/h1&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 12px; line-height: 18px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;This is an external implementation of workload estimator feature that might be integrated into capella. This estimator takes the workload expected by the user and provides user with the most optimal cluster configuration.&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontSize=22;fontColor=#000000;perimeterSpacing=0;verticalAlign=top;spacing=15;" vertex="1" parent="1">
                    <mxGeometry x="-706.87" y="-230" width="533.75" height="240" as="geometry"/>
                </mxCell>
                <mxCell id="15" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" edge="1" parent="1" source="12" target="14">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;The User&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;" vertex="1" parent="1">
                    <mxGeometry x="-582.49" y="980" width="284.99" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;Send the above parameters to we-api&lt;/font&gt;" style="edgeStyle=none;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;fontFamily=Verdana;fontSize=22;fontColor=#000000;entryX=0.75;entryY=0;entryDx=0;entryDy=0;rounded=1;" edge="1" parent="1" source="14" target="16">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-309" y="1820" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="14" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;We take the following parameters from the user:&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Service Groups&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;List of services in each group&lt;/font&gt;&lt;/li&gt;&lt;li&gt;Type of instance selected (hardware for cpu and ram)&lt;/li&gt;&lt;li&gt;Disk Type&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Dataset&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Number of documents&lt;/li&gt;&lt;li&gt;Average document size&lt;/li&gt;&lt;li&gt;Resident ratio (working set)&lt;/li&gt;&lt;li&gt;Indexes % of dataset&lt;/li&gt;&lt;li&gt;Full Text Search % of dataset&lt;/li&gt;&lt;li&gt;Operational Analytics % of dataset&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Application Workload&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Reads/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Writes/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Deletes/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;SQL++ Queries/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Backup&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;XDCR&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;align=left;verticalAlign=middle;spacing=15;" vertex="1" parent="1">
                    <mxGeometry x="-702.49" y="1130" width="524.99" height="490" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;required configurations are sent back to the user&lt;/font&gt;" style="edgeStyle=none;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=22;fontColor=#000000;rounded=1;" edge="1" parent="1" source="16" target="14">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="23" style="edgeStyle=none;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" edge="1" parent="1" source="16" target="22">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-size: 22px;&quot;&gt;&lt;b&gt;WE-api&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;" vertex="1" parent="1">
                    <mxGeometry x="-1045" y="1890" width="1210" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="25" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" edge="1" parent="1" source="22" target="24">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="Valid configs" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;fontFamily=Verdana;fontColor=#000000;rounded=1;" vertex="1" connectable="0" parent="25">
                    <mxGeometry x="-0.2298" y="-2" relative="1" as="geometry">
                        <mxPoint x="-1" as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="22" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;b style=&quot;font-size: 22px;&quot;&gt;Validator&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;The incoming json parameters are validated for invalid config&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=16;fontColor=#000000;" vertex="1" parent="1">
                    <mxGeometry x="-267" y="2070" width="260" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="&lt;font size=&quot;1&quot; face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: 22px;&quot;&gt;Calculator&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;For each service group, the hardware resources are divided equally among all the services present in the group.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Then for each service we calculate the required resources and no. of nodes (as per the hardware provided).&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;direction=east;spacing=15;" vertex="1" parent="1">
                    <mxGeometry x="-630" y="2380" width="380" height="210" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-size: 22px;&quot;&gt;&lt;b&gt;Services&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;spacing=15;" vertex="1" parent="1">
                    <mxGeometry x="-590" y="2780" width="300" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="37" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" edge="1" parent="1" source="27" target="24">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-480" y="2690" as="sourcePoint"/>
                        <mxPoint x="-430" y="2640" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="38" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" edge="1" parent="1" source="34" target="27">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-899.9999999999995" y="3190" as="sourcePoint"/>
                        <mxPoint x="-899.9999999999995" y="3000" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="56" value="" style="group" vertex="1" connectable="0" parent="1">
                    <mxGeometry x="-9670" y="3850" width="7290" height="2280" as="geometry"/>
                </mxCell>
                <mxCell id="34" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Data Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" vertex="1" parent="56">
                    <mxGeometry x="4380" width="170" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="44" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;TTL expiration (in days) [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Purge frequency [default constant = 3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;eviction policy [default constant = 'Full']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;working_set [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Jemalloc bin size [default constant = 0.25]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;high water mark [default constant = 0.85] (in docs its hwm)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;OS Memory reserved [default constant = 0.20]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when TTL expiration (in days) is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = total no. of documents / TTL expiration (in days) / 24 / 3600&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;when TTL is 0:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = 0&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space = (Average key/id size + (60 * Inbound/Outbound XDCR streams)) * purge frequency * (Number of replicas + 1) * (Delete Ops per second + Expiry Ops per second) * 60 * 60 * 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Note the inbound/outbound xdcr streams are configured differently in docs and acutal code:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * Inbound/Outbound XDCR streams) this section is calculated like this:&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * max(1, Inbound/Outbound XDCR streams))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size = (Total No. of documents) * (BUCKET_TYPE)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size = (Total No. of documents) * (Average Key/Id size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size = Total Active Metadata size + Total Active Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size = (Total no. of documents * BUCKET_TYPE * No. of replicas)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size = (Total no. of documents * Average key/Id size * No. of replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica metadata size + keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata Size + Keyset size = Total Replica Metadata size + Total Replica Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset = Total no. of documents * Average document size * (1 - compression_ratio)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset = Active Dataset * No. of replicas&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Value':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required = ( % working_set * (Active Dataset size + Replica Dataset size )) + (Total Active Metadata Size + Keyset Size) + (Total Replica Metadata Size + Keyset Size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Full':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required = (&amp;nbsp;% working_set * ((Active Dataset size + Replica Dataset size ) + (Total Active Metadata Size + Keyset Size) + (Total Replica Metadata Size + Keyset Size)))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Value':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones = Total Memory Required + (Total Memory Required * Jemalloc Bin Size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Full':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones = Total Memory Required + (Total Memory Required * Jemalloc Bin Size * working_set)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if bucket type is 'ephemeral'&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;add tombstone space to the result&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM Quota&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM Quota = (Total + Jemalloc Bin size + Tombstones) / (% high water mark)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM (including OS memory reserved)&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM = Total RAM Quota * (1 + % OS Memory Reserved)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Need to review this as for the current calculation it is not performed directly in function in the codebase&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" vertex="1" parent="56">
                    <mxGeometry y="810" width="1540" height="1470" as="geometry"/>
                </mxCell>
                <mxCell id="45" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" edge="1" parent="56" source="44" target="34">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="46" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Calculating CPU = sum(outbound_xdcr_streams, inbound_xdcr_streams, ((write ops per sec + delete ops per sec + expiry ops per sec) / 10000))&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Need to review the expiry ops per sec for this section as it is quite different in codebase&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" vertex="1" parent="56">
                    <mxGeometry x="1770" y="820" width="1000" height="380" as="geometry"/>
                </mxCell>
                <mxCell id="47" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" edge="1" parent="56" source="46" target="34">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="48" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;TTL expiration (in days) [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Purge frequency [default constant = 3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;append_only_multiplier [default constant = 3] (this is for 'Couchstore' storage engine)&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when TTL expiration (in days) is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = total no. of documents / TTL expiration (in days) / 24 / 3600&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;when TTL is 0:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = 0&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space = (Average key/id size + (60 * Inbound/Outbound XDCR streams)) * purge frequency * (Number of replicas + 1) * (Delete Ops per second + Expiry Ops per second) * 60 * 60 * 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Note the inbound/outbound xdcr streams are configured differently in docs and acutal code:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * Inbound/Outbound XDCR streams) this section is calculated like this:&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * max(1, Inbound/Outbound XDCR streams))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size = (Total No. of documents) * (BUCKET_TYPE)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size = (Total No. of documents) * (Average Key/Id size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size = Total Active Metadata size + Total Active Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size = (Total no. of documents * BUCKET_TYPE * No. of replicas)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size = (Total no. of documents * Average key/Id size * No. of replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica metadata size + keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata Size + Keyset size = Total Replica Metadata size + Total Replica Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset = Total no. of documents * Average document size * (1 - compression_ratio)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset = Active Dataset * No. of replicas&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Size on Disk&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when BUCKET_TYPE is ephemeral then size on disk is 0.&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if compression_ratio is equal to 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;size on disk = ((active_dataset_size + replica_dataset_size + active_metadata_and_keyset_size + replica_metadata_and_keyset_size) * append_only_multiplier) + tombstone space&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if compression_ratio is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;size on disk = (((active_dataset_size + replica_dataset_size) * (1 - compression_ratio) + active_metadata_and_keyset_size + replica_metadata_and_keyset_size) * append_only_multiplier) + tombstone space&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" vertex="1" parent="56">
                    <mxGeometry x="2900" y="830" width="1610" height="1210" as="geometry"/>
                </mxCell>
                <mxCell id="49" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="56" source="48" target="34">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="50" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Disk IO = ((write_ops_per_sec + delete_ops_per_sec + expiry_ops_per_sec) * (Number of replicas + 1)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when BUCKET_TYPE is 'ephemeral' then Disk IO = 0&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" vertex="1" parent="56">
                    <mxGeometry x="4720" y="830" width="790" height="300" as="geometry"/>
                </mxCell>
                <mxCell id="51" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="56" source="50" target="34">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="54" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Reads Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Primary_Index [default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Secondary Bytes [default constant = 0]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Mutation Rate per Second = write_ops_per_second + delete_ops_per_second + expiry_ops_per_second&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Rebalance Throughput [default constant = 450]&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Network Reserved Capacity [default constant = 0.8]&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Network Protocol Overhead [default constant = 0.1]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Read Bandwidth&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Read Bandwidth = ((BUCKET_TYPE + Average Key/ID Size) + (Average Document Size * Read Ops per Second * (1 - % compression_ratio))) / 125000&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal;&quot; class=&quot;p1&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; size=&quot;1&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal;&quot; class=&quot;p1&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;where BUCKET_TYPE = {&quot;Couchbase&quot;: 56, &quot;Ephemeral&quot;: 72}&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Write Bandwidth&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Write Bandwidth = ((BUCKET_TYPE + Average Key/ID Size) + (Average Document Size * Write Ops per Second * (1 - % compression_ratio)) + (Average Key/ID Size * (Delete Ops per Second + Expiry Ops per Second))) / 125000&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal; min-height: 15px;&quot; class=&quot;p2&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;where BUCKET_TYPE = {&quot;Couchbase&quot;: 56, &quot;Ephemeral&quot;: 72}&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Reads = Data Write Bandwidth * (1 + Number of Replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Transactions = Data Read Bandwidth + (Data Write Bandwidth * Number of Replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Reads = Data Write bandwidth * Inbound XDCR Streams&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when XDCR Active-Active is not set, XDCR Reads = 0&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Transactions = Data Write Bandwidth * Outbound XDCR Streams&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Indexing Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if Primary Index:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Receive Network per Second = Average Key/ID Size * (1 + Number of Replicas) * Mutation Rate per Second&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;else:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Secondary Network per Second = (Average Key/ID Size + Total Secondary Bytes) * (1 + Number of Replicas) * Mutation Rate per Second&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Array Network per Second = Average Key/ID Size + (Array Size of Each Element + Array Length) * (1 + Number of Replicas) * Mutation Rate per Second&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Receive Network per Second = Secondary Network per Second + Array Network per Second&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Indexing Transactions = Receive Network per Second / 125000&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Reads = KV Reads + XDCR Reads&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Transactions = KV Transactions + XDCR Transactions + Indexing Transactions&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Minimum NIC Bandwidth Required&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Total Reads = Total Reads&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Data Total Reads += Rebalance Throughput&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Data Total Transactions =&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); background-color: initial; font-family: Verdana; font-size: 12px;&quot;&gt;Total Transactions&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;This forumulation was commented in the actual code ------&amp;gt; (so no need to use this) ------&amp;gt; Data Total Transactions += (Network Available on Node(Gbps) * 1000) + Rebalance Throughput&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Minimum NIC Bandwidth Required =&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;max(Data Total Transactions, Data Total Reads) / 1000 / Network Reserved Capacity * ((1 + Network Protocol Overhead))&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" vertex="1" parent="56">
                    <mxGeometry x="5640" y="830" width="1650" height="1330" as="geometry"/>
                </mxCell>
                <mxCell id="55" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="56" source="54" target="34">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>