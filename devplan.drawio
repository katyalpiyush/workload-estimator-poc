<mxfile host="65bd71144e">
    <diagram id="mmnEbl0gjILGWMQl6t8d" name="Page-1">
        <mxGraphModel dx="14950" dy="1723" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" background="none" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="7" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=35;fontColor=#000000;spacing=15;rounded=1;" parent="1" source="2" target="5" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="&lt;font style=&quot;font-size: 22px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;What are we estimating?&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-620" y="120" width="360" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="4" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;spacing=15;rounded=1;" parent="1" source="6" target="2" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-440" y="30" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="13" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" parent="1" source="5" target="12" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;There are 5 types of resources that are (may or may not be) used by different services configured in a cluster:&lt;br&gt;&lt;/font&gt;&lt;ol style=&quot;line-height: 150%;&quot;&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;RAM&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;CPU&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Disk Space&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Disk IO&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Network&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;We are estimating the most optimal amount of these resources which are required by each service configured in the cluster.&lt;br&gt;The workload and hardware configurations will be provided by the user. Based on the estimated amounts of resources and the available hardware we calculate the total no. of nodes required by each service group (based on the limiting factor among all the resources). We have the following 6 services over which the cluster is configured:&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Data&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Index&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Query&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Search&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;Eventing&lt;/font&gt;&lt;/li&gt;&lt;li&gt;Analytics&lt;/li&gt;&lt;/ol&gt;&lt;/font&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;fontSize=22;align=left;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-772.5" y="260" width="665" height="600" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;h1 style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot; style=&quot;font-size: 35px;&quot;&gt;workload-estimator-poc&lt;/font&gt;&lt;/h1&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 12px; line-height: 18px;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;This is an external implementation of workload estimator feature that might be integrated into capella. This estimator takes the workload expected by the user and provides user with the most optimal cluster configuration.&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontSize=22;fontColor=#000000;perimeterSpacing=0;verticalAlign=top;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-706.87" y="-230" width="533.75" height="240" as="geometry"/>
                </mxCell>
                <mxCell id="15" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" parent="1" source="12" target="14" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;The User&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;" parent="1" vertex="1">
                    <mxGeometry x="-582.49" y="980" width="284.99" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;Send the above parameters to we-api&lt;/font&gt;" style="edgeStyle=none;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;fontFamily=Verdana;fontSize=22;fontColor=#000000;entryX=0.75;entryY=0;entryDx=0;entryDy=0;rounded=1;" parent="1" source="14" target="16" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-309" y="1820" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="14" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;We take the following parameters from the user:&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Service Groups&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;List of services in each group&lt;/font&gt;&lt;/li&gt;&lt;li&gt;Type of instance selected (hardware for cpu and ram)&lt;/li&gt;&lt;li&gt;Disk Type&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Dataset&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Number of documents&lt;/li&gt;&lt;li&gt;Average document size&lt;/li&gt;&lt;li&gt;Resident ratio (working set)&lt;/li&gt;&lt;li&gt;Indexes % of dataset&lt;/li&gt;&lt;li&gt;Full Text Search % of dataset&lt;/li&gt;&lt;li&gt;Operational Analytics % of dataset&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Application Workload&lt;/font&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Reads/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Writes/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Deletes/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;SQL++ Queries/sec&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;Backup&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;XDCR&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;align=left;verticalAlign=middle;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-702.49" y="1130" width="524.99" height="490" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;required configurations are sent back to the user&lt;/font&gt;" style="edgeStyle=none;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=22;fontColor=#000000;rounded=1;" parent="1" source="16" target="14" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="23" style="edgeStyle=none;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" parent="1" source="16" target="22" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-size: 22px;&quot;&gt;&lt;b&gt;WE-api&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;" parent="1" vertex="1">
                    <mxGeometry x="-1045" y="1890" width="1210" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="25" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=12;fontColor=#000000;rounded=1;" parent="1" source="22" target="24" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="Valid configs" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;fontFamily=Verdana;fontColor=#000000;rounded=1;" parent="25" vertex="1" connectable="0">
                    <mxGeometry x="-0.2298" y="-2" relative="1" as="geometry">
                        <mxPoint x="-1" as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="22" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;b style=&quot;font-size: 22px;&quot;&gt;Validator&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;The incoming json parameters are validated for invalid config&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=16;fontColor=#000000;" parent="1" vertex="1">
                    <mxGeometry x="-267" y="2070" width="260" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="&lt;font size=&quot;1&quot; face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-weight: bold; font-size: 22px;&quot;&gt;Estimator&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;For each service group, the hardware resources are divided equally among all the services present in the group.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Then for each service we calculate the required resources and no. of nodes (as per the hardware provided).&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;direction=east;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-630" y="2380" width="380" height="210" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-size: 22px;&quot;&gt;&lt;b&gt;Services&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=#000000;spacing=15;" parent="1" vertex="1">
                    <mxGeometry x="-590" y="2780" width="300" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="37" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="1" source="27" target="24" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-480" y="2690" as="sourcePoint"/>
                        <mxPoint x="-430" y="2640" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="38" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="34" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-899.9999999999995" y="3190" as="sourcePoint"/>
                        <mxPoint x="-620" y="2800" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="56" value="" style="group" parent="1" vertex="1" connectable="0">
                    <mxGeometry x="-12230" y="3170" width="7290" height="2280" as="geometry"/>
                </mxCell>
                <mxCell id="34" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Data Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="56" vertex="1">
                    <mxGeometry x="4380" width="170" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="44" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;/span&gt;source - sizing calculator&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;TTL expiration (in days) [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Purge frequency [default constant = 3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;eviction policy [default constant = 'Full']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;working_set [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Jemalloc bin size [default constant = 0.25]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;high water mark [default constant = 0.85] (in docs its hwm)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;OS Memory reserved [default constant = 0.20]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when TTL expiration (in days) is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = total no. of documents / TTL expiration (in days) / 24 / 3600&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;when TTL is 0:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = 0&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space = (Average key/id size + (60 * Inbound/Outbound XDCR streams)) * purge frequency * (Number of replicas + 1) * (Delete Ops per second + Expiry Ops per second) * 60 * 60 * 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Note the inbound/outbound xdcr streams are configured differently in docs and acutal code:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * Inbound/Outbound XDCR streams) this section is calculated like this:&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * max(1, Inbound/Outbound XDCR streams))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size = (Total No. of documents) * (BUCKET_TYPE)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size = (Total No. of documents) * (Average Key/Id size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size = Total Active Metadata size + Total Active Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size = (Total no. of documents * BUCKET_TYPE * No. of replicas)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size = (Total no. of documents * Average key/Id size * No. of replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica metadata size + keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata Size + Keyset size = Total Replica Metadata size + Total Replica Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset = Total no. of documents * Average document size * (1 - compression_ratio)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset = Active Dataset * No. of replicas&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Value':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required = ( % working_set * (Active Dataset size + Replica Dataset size )) + (Total Active Metadata Size + Keyset Size) + (Total Replica Metadata Size + Keyset Size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Full':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Memory Required = (&amp;nbsp;% working_set * ((Active Dataset size + Replica Dataset size ) + (Total Active Metadata Size + Keyset Size) + (Total Replica Metadata Size + Keyset Size)))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Value':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones = Total Memory Required + (Total Memory Required * Jemalloc Bin Size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when eviction policy is 'Full':&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total + Jemalloc Bin size + Tombstones = Total Memory Required + (Total Memory Required * Jemalloc Bin Size * working_set)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if bucket type is 'ephemeral'&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;add tombstone space to the result&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM Quota&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM Quota = (Total + Jemalloc Bin size + Tombstones) / (% high water mark)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM (including OS memory reserved)&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total RAM = Total RAM Quota * (1 + % OS Memory Reserved)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Need to review this as for the current calculation it is not performed directly in function in the codebase&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="56" vertex="1">
                    <mxGeometry y="810" width="1540" height="1470" as="geometry"/>
                </mxCell>
                <mxCell id="45" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="56" source="44" target="34" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="46" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Calculating CPU = sum(outbound_xdcr_streams, inbound_xdcr_streams, ((write ops per sec + delete ops per sec + expiry ops per sec) / 10000))&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Need to review the expiry ops per sec for this section as it is quite different in codebase&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="56" vertex="1">
                    <mxGeometry x="1770" y="820" width="1000" height="380" as="geometry"/>
                </mxCell>
                <mxCell id="47" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="56" source="46" target="34" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="48" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;TTL expiration (in days) [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Purge frequency [default constant = 3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;append_only_multiplier [default constant = 3] (this is for 'Couchstore' storage engine)&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when TTL expiration (in days) is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = total no. of documents / TTL expiration (in days) / 24 / 3600&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;when TTL is 0:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Expiry Ops per second = 0&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Tombstone space = (Average key/id size + (60 * Inbound/Outbound XDCR streams)) * purge frequency * (Number of replicas + 1) * (Delete Ops per second + Expiry Ops per second) * 60 * 60 * 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Note the inbound/outbound xdcr streams are configured differently in docs and acutal code:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * Inbound/Outbound XDCR streams) this section is calculated like this:&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(60 * max(1, Inbound/Outbound XDCR streams))&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size = (Total No. of documents) * (BUCKET_TYPE)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Keyset Size = (Total No. of documents) * (Average Key/Id size)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Active Metadata Size + Keyset size = Total Active Metadata size + Total Active Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Metadata and Keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata size = (Total no. of documents * BUCKET_TYPE * No. of replicas)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;If BUCKET_TYPE is 'Couchbase' then 56 else if it is 'Ephemeral' then 72&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Keyset Size = (Total no. of documents * Average key/Id size * No. of replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica metadata size + keyset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Replica Metadata Size + Keyset size = Total Replica Metadata size + Total Replica Keyset Size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Active Dataset = Total no. of documents * Average document size * (1 - compression_ratio)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset size&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Replica Dataset = Active Dataset * No. of replicas&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Size on Disk&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when BUCKET_TYPE is ephemeral then size on disk is 0.&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if compression_ratio is equal to 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;size on disk = ((active_dataset_size + replica_dataset_size + active_metadata_and_keyset_size + replica_metadata_and_keyset_size) * append_only_multiplier) + tombstone space&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if compression_ratio is not 0:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;size on disk = (((active_dataset_size + replica_dataset_size) * (1 - compression_ratio) + active_metadata_and_keyset_size + replica_metadata_and_keyset_size) * append_only_multiplier) + tombstone space&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="56" vertex="1">
                    <mxGeometry x="2900" y="830" width="1610" height="1210" as="geometry"/>
                </mxCell>
                <mxCell id="49" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="56" source="48" target="34" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="50" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Disk IO = ((write_ops_per_sec + delete_ops_per_sec + expiry_ops_per_sec) * (Number of replicas + 1)&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when BUCKET_TYPE is 'ephemeral' then Disk IO = 0&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="56" vertex="1">
                    <mxGeometry x="4720" y="830" width="790" height="300" as="geometry"/>
                </mxCell>
                <mxCell id="51" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="56" source="50" target="34" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="54" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Reads Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;compression_ratio [default constant = 0.3]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write ops per sec [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Delete Ops per second [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;expiry ops per second [source - calculated using formula under calculating RAM section]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Inbound&amp;nbsp;XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Outbound XDCR streams [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Primary_Index [default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Secondary Bytes [default constant = 0]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Mutation Rate per Second = write_ops_per_second + delete_ops_per_second + expiry_ops_per_second&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Rebalance Throughput [default constant = 450]&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Network Reserved Capacity [default constant = 0.8]&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: &amp;quot;Helvetica Neue&amp;quot;; font-size: 13px;&quot;&gt;Network Protocol Overhead [default constant = 0.1]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Read Bandwidth&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Read Bandwidth = ((BUCKET_TYPE + Average Key/ID Size) + (Average Document Size * Read Ops per Second * (1 - % compression_ratio))) / 125000&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal;&quot; class=&quot;p1&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; size=&quot;1&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal;&quot; class=&quot;p1&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;where BUCKET_TYPE = {&quot;Couchbase&quot;: 56, &quot;Ephemeral&quot;: 72}&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Write Bandwidth&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Write Bandwidth = ((BUCKET_TYPE + Average Key/ID Size) + (Average Document Size * Write Ops per Second * (1 - % compression_ratio)) + (Average Key/ID Size * (Delete Ops per Second + Expiry Ops per Second))) / 125000&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; line-height: normal; min-height: 15px;&quot; class=&quot;p2&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;where BUCKET_TYPE = {&quot;Couchbase&quot;: 56, &quot;Ephemeral&quot;: 72}&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Reads = Data Write Bandwidth * (1 + Number of Replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;KV Transactions = Data Read Bandwidth + (Data Write Bandwidth * Number of Replicas)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Reads = Data Write bandwidth * Inbound XDCR Streams&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;when XDCR Active-Active is not set, XDCR Reads = 0&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;XDCR Transactions = Data Write Bandwidth * Outbound XDCR Streams&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Indexing Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if Primary Index:&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Receive Network per Second = Average Key/ID Size * (1 + Number of Replicas) * Mutation Rate per Second&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;else:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Secondary Network per Second = (Average Key/ID Size + Total Secondary Bytes) * (1 + Number of Replicas) * Mutation Rate per Second&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Array Network per Second = Average Key/ID Size + (Array Size of Each Element + Array Length) * (1 + Number of Replicas) * Mutation Rate per Second&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;Receive Network per Second = Secondary Network per Second + Array Network per Second&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Indexing Transactions = Receive Network per Second / 125000&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Reads&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Reads = KV Reads + XDCR Reads&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Transactions&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Transactions = KV Transactions + XDCR Transactions + Indexing Transactions&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Minimum NIC Bandwidth Required&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Data Total Reads = Total Reads&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Data Total Reads += Rebalance Throughput&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Data Total Transactions =&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); background-color: initial; font-family: Verdana; font-size: 12px;&quot;&gt;Total Transactions&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;This forumulation was commented in the actual code ------&amp;gt; (so no need to use this) ------&amp;gt; Data Total Transactions += (Network Available on Node(Gbps) * 1000) + Rebalance Throughput&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px; font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-stretch: normal; font-size: 13px; line-height: normal; font-family: &amp;quot;Helvetica Neue&amp;quot;;&quot; class=&quot;p1&quot;&gt;Minimum NIC Bandwidth Required =&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); background-color: initial;&quot;&gt;max(Data Total Transactions, Data Total Reads) / 1000 / Network Reserved Capacity * ((1 + Network Protocol Overhead))&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="56" vertex="1">
                    <mxGeometry x="5640" y="830" width="1650" height="1330" as="geometry"/>
                </mxCell>
                <mxCell id="55" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="56" source="54" target="34" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="57" value="" style="group" parent="1" vertex="1" connectable="0">
                    <mxGeometry x="-10780" y="6240" width="7290" height="2280" as="geometry"/>
                </mxCell>
                <mxCell id="58" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Index Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="57" vertex="1">
                    <mxGeometry x="4380" width="220" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="59" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;/span&gt;source - sizing calculator&lt;br&gt;for index type - plasma&lt;br&gt;couchbase version 7.1 and above&lt;br&gt;(change to use from guidlines)&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;plasma_key_size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;document_key_id_size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of indexes [not sure but currently taking it as 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of documents in index [source - user input (% indexes dataset)]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;purge_ratio [default constant = 0.2]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;resident_ratio [default constant = 0.1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;% compression [default constant = 0.5]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;% compression_ratio [default constant = 2.5]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;cpu available on node [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;jemalloc_fragmentation [default constant = 0.4]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol&gt;&lt;li&gt;Item size&lt;/li&gt;&lt;ol&gt;&lt;li&gt;if plasma_key_size is 0&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Item size = document_key_id_size + 12 + 17&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;else&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Item size = plasma_key_size&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li&gt;Items per page&lt;/li&gt;&lt;ol&gt;&lt;li&gt;if floor(192 * 1024 / (2/3 * Item Size + 1/3 * (Item Size + 50))) &amp;gt;= 300:&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Items per page = 300&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;else&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Items per page = floor(192 * 1024 / (2/3 * Item Size + 1/3 * (Item Size + 50)))&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li&gt;Page size&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Page size = (Item size + 50) * Items per page&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Number of shards&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Number of shards = ceil(Number of indexes / 5) * 2&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Index Memory&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Index Memory = (Item size + 50) * Number of documents in index * (1 + purge_ratio) * 2 / 1024 / 1024 / 1024&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Compaction&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After Compaction = (Index Memory * 1024 * 1024 * 1024 - (Number of docs in index * (1 + purge_ratio) * 2 / 3 * 40 * 2)) / 1024 / 1024 / 1024&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Resident Ratio&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After Resident Ratio = Index Memory After Compaction * resident ratio&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Compression&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After Compression = Index Memory After Resident Ratio * (% compression / % compression_ratio + (1 - % compression))&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Skiplist&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After skiplist = Index Memory After Compression + Number of docs in index / Items per page * (Item size + 32) * 2 / 1024 /1024/1024&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Buffer Overhead&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After buffer overhead = (Index Memory after skiplist * 1024 + Number of shards * 4 + Page size * CPU Available on node * Number of shards * 2 * 1.1 / 1024 /1024) / 1024&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Memory After Jemalloc Fragmentation&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Index Memory After Jemalloc Fragmentation = Index Memory After buffer overhead + Index memory after buffer overhead * jemalloc_fragmentation / (1 - jemalloc_fragmentation)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Recommended RAM Quota&lt;/li&gt;&lt;ol&gt;&lt;li&gt;RAM Quota = Index Memory After Jemalloc Fragmentation * 1.05&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="57" vertex="1">
                    <mxGeometry y="812" width="1330" height="1058" as="geometry"/>
                </mxCell>
                <mxCell id="60" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="57" source="59" target="58" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="61" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;br&gt;&lt;/span&gt;index type - plasma&lt;br&gt;(requires changes as currently returning constant)&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;array_index_size_of_each_element [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Mutation rate per second [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Mutation Ingest Throughput per core [default constant = 12500]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Index Scans per second [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Scan Throughput per core [default constant = 9000]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Array length [default constant = 0]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Expected Cores Required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;if array_index_size_of_each_element is 0:&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Expected Cores Required = (Mutation Rate per second / Mutation Ingest Throughput per core) + (Average Index Scans per second / Scan Throughput per core)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;else&lt;/span&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Plasma Expected Cores Required = ((Mutation Rate per second * Array length) / Mutation Ingest Throughput per core) + (Average Index Scans per second / Scan Throughput per core)&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li&gt;Total Required CPU:&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Total Required CPU = Plasma Expected Cores Required * 1.2&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="57" vertex="1">
                    <mxGeometry x="1770" y="820" width="1000" height="500" as="geometry"/>
                </mxCell>
                <mxCell id="62" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="57" source="61" target="58" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="63" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;br&gt;&lt;/span&gt;index type - Plasma&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of documents in index [source - user input (% index dataset)]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Document Key/Id Size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Secondary Bytes [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;snappy_compression [default constant = 0.8]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;fragmentation [default constant = 0.3]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Disk Size&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Disk Size = (((Number of Documents in index) * 2 / 400) * ((Document Key/ID Size + Total Secondary Bytes + 56) * 4) + (Document Key/ID size + Total Secondary bytes + 16) * Number of documents in Index * 2) * 2&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Plasma Compression&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Plasma Compression = Plasma Disk Size * % snappy_compression&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Fragmentation&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Fragmentation = Plasma Disk Size * % fragmentation&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Expected Max Disk Usage&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma Expected Max Disk Usage = Plasma Fragmentation + Plasma Compression&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma In Memory Recommended Disk Quota&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma In memory recommended disk quota = Plasma Expected Max Disk Usage * 1.1&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma 20% DGM Recommended Disk Quota (use this one)&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Plasma DGM Recommended Disk Quota = Plasma Expected Max Disk Usage * 1.3&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="57" vertex="1">
                    <mxGeometry x="2820" y="850" width="1560" height="520" as="geometry"/>
                </mxCell>
                <mxCell id="64" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="57" source="63" target="58" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="65" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="57" vertex="1">
                    <mxGeometry x="4720" y="830" width="420" height="150" as="geometry"/>
                </mxCell>
                <mxCell id="66" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="57" source="65" target="58" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="67" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="57" vertex="1">
                    <mxGeometry x="5640" y="830" width="400" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="68" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="57" source="67" target="58" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="71" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;rounded=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0;entryY=1;entryDx=0;entryDy=0;" parent="1" source="58" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-3420" y="5090" as="sourcePoint"/>
                        <mxPoint x="-280" y="3160" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="72" value="" style="group" parent="1" vertex="1" connectable="0">
                    <mxGeometry x="-5040" y="5440" width="15040" height="3620" as="geometry"/>
                </mxCell>
                <mxCell id="73" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Query Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="72" vertex="1">
                    <mxGeometry x="4380" width="220" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="74" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;/span&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="72" vertex="1">
                    <mxGeometry y="812" width="520" height="148" as="geometry"/>
                </mxCell>
                <mxCell id="75" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="72" source="74" target="73" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="76" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;simple_query_throughput_per_sec_stale_ok [source - user input (but we only use medium level queries for simplicity) so take it 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;SIMPLE_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_OK [default constant = 14000 / 24]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;simple_query_throughput_per_sec_stale_false [source - user input (but we only use medium level queries for simplicity) so take it 0]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;SIMPLE_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_FALSE [default constant = 700 / 24]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;medium_query_throughput_per_sec_stale_ok [source - user input (currently taking it as a default constant = 0)]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;MEDIUM_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_OK [default constant = 1500 / 24]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;medium_query_throughput_per_sec_stale_false [source - user input (this is from the sql++ queries per sec field)]&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;MEDIUM_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_FALSE [default constant = 400 / 24]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Simple Query CPU Required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Simple Query CPU Required = (simple_query_throughput_per_sec_stale_ok / SIMPLE_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_OK) + (simple_query_throughput_per_sec_stale_false / SIMPLE_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_FALSE)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Medium Query CPU Required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Medium Query CPU Required = (medium_query_throughput_per_sec_stale_ok / MEDIUM_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_OK) + (medium_query_throughput_per_sec_stale_false / MEDIUM_QUERY_QUERIES_PER_SEC_PER_CORE_STALE_FALSE)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Complex Query CPU Required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;There are no existing calculations for Complex queries therefore the result returned will be 0&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Total CPU&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Total CPU = Simple Query CPU required + Medium Query CPU required + Complex Query CPU required&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="72" vertex="1">
                    <mxGeometry x="1770" y="820" width="1000" height="500" as="geometry"/>
                </mxCell>
                <mxCell id="77" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="72" source="76" target="73" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="78" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;br&gt;&lt;/span&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="72" vertex="1">
                    <mxGeometry x="3060" y="860" width="580" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="79" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="72" source="78" target="73" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="80" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="72" vertex="1">
                    <mxGeometry x="4720" y="830" width="420" height="150" as="geometry"/>
                </mxCell>
                <mxCell id="81" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="72" source="80" target="73" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="82" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="72" vertex="1">
                    <mxGeometry x="5640" y="830" width="400" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="83" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="72" source="82" target="73" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="103" value="" style="group" parent="72" vertex="1" connectable="0">
                    <mxGeometry x="7750" y="-730" width="7290" height="2350" as="geometry"/>
                </mxCell>
                <mxCell id="104" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Eventing Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="103" vertex="1">
                    <mxGeometry x="4380" width="220" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="105" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;br&gt;&lt;/span&gt;There are no existing calculations for RAM&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="103" vertex="1">
                    <mxGeometry y="812" width="550" height="158" as="geometry"/>
                </mxCell>
                <mxCell id="106" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="103" source="105" target="104" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="107" value="&lt;span style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); text-align: left;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;mutation rate per sec = write ops + delete ops + expiry ops per sec&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;number of handlers [default constant = 1]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;source bucket mutation rate factor = 115000 / 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;handler count per core factor = 5 / 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of read ops per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of write ops per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of delete ops per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;% documents satisfying condition [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Bucket ops per core factor [default constant = 83000 / 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;timers per core factor [default constant = 26500 / 24]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;number of timers created per execution thread [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;N1QL per core factor [default constant = 8500 / 24&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;number of N1QL queries per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;log per core factor [default constant = 105500 / 24]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;number of log statements per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;curl per core factor [default constant = 1100 / 24]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;number of curl statements per execution [default constant = 0]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Source bucket mutation rate factor cpu required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Source bucket mutation rate factor cpu req = (mutation rate per sec * Number of handlers) / source bucket mutation rate factor&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Number of Handlers cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;number of handler cpu req = Number of handlers / handler count per core factor&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Bucket Ops CPU Required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Bucket ops cpu req = ((Number of read ops per execution +&amp;nbsp; No. of write ops per execution + no. of delete ops per execution) * (mutation rate per sec * % documents satisfying condition)) / bucket ops per core factor&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Timer ops cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Timer ops cpu req = (mutation rate per sec * % Documents Satisfying condition) / timers per core factor * number of timers created per execution thread&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;N1QL ops cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;N1QL ops cpu required = (mutation rate per sec * % Documents Satisfying condition) / N1QL per core factor * number of N1QL queries per execution&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Log ops cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Log ops cpu req = (mutation rate per sec * % Documents Satisfying condition) / Log per core factor * number of log statements per execution&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;cURL ops cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;cURL ops cpu req = (mutation rate per sec * % Documents Satisfying condition) / cURL per core factor * Number of cURL Statements per Execution&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Total cpu required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Total cpu req = Source bucket mutation rate factor cpu required + Number of Handlers cpu required + Bucket Ops CPU Required + Timer ops cpu required + N1QL ops cpu required + Log ops cpu required + cURL ops cpu required&lt;/li&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="103" vertex="1">
                    <mxGeometry x="940" y="810" width="1000" height="1050" as="geometry"/>
                </mxCell>
                <mxCell id="108" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="103" source="107" target="104" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="109" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;br&gt;&lt;/span&gt;No existing calculations&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="103" vertex="1">
                    <mxGeometry x="2220" y="980" width="530" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="110" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="103" source="109" target="104" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="111" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="103" vertex="1">
                    <mxGeometry x="3490" y="960" width="420" height="150" as="geometry"/>
                </mxCell>
                <mxCell id="112" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="103" source="111" target="104" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="113" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); text-align: left;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Mutation Rate per Second = write_ops_per_second + delete_ops_per_second + expiry_ops_per_second&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;No. of read ops per execution [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;read_avg_key_id_size [default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write_avg_key_id_size&amp;nbsp;[default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;write_avg_doc_size&amp;nbsp;[default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;No. of write ops per execution&amp;nbsp;[default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;No. of delete ops per execution&amp;nbsp;[default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;delete Avg key id size&amp;nbsp;[default constant = 0]&lt;br&gt;&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;%&amp;nbsp;documents satisfying condition&amp;nbsp;[default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;read average document size&amp;nbsp;&amp;nbsp;[default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of N1QL Queries per execution [default constant = 0]&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Average N1QL Query size&lt;/span&gt;&amp;nbsp;[default constant = 0]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Source Reads&lt;/li&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if BUCKET_TYPE is 'Couchbase'&lt;/span&gt;&lt;br&gt;&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Source Reads = (Average key/id size + Average Document size + 56) * mutation rate per sec&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;else&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Source Reads = (Average key/id size + Average Document size + 72) * mutation rate per sec&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Bucket Ops Transactions&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Bucket ops Transactions = ((No. of read ops per execution * read_avg_key_id_size) + ((write_avg_key_id_size + write_avg_doc_size) * No. of write ops per execution) + (No. of delete ops per execution * delete Avg key id size)) * (mutation rater per sec * % documents satisfying condition)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Bucket Ops Reads&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Buckeet Ops reads = (Number of read ops per execution * read average document size) * (mutation rate per second * % documents satisfying condition)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;N1QL Transactions&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;N1QL Transactions = (Number of N1QL Queries per execution * Average N1QL Query size) * (mutation rate per second * % documents satisfying condition)&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;N1QL Reads&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;N1QL Reads = (Number of N!QL Queries per execution * Average N1QL query response size) * (mutation rate per second * % documents satisfying condition)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;cURL Transactions&lt;/li&gt;&lt;ol&gt;&lt;li&gt;(Number of cURL statements per execution * Average cURL request body size) * (% Documents satisfying condition * Read Average Key/id size)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;cURL Reads&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;(Number of cURL statements per execution * Average cURL response body size) * (% Documents satisfying condition * Read Average Key/id size)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Total Reads&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Source reads per second + bucket ops reads per second + N1QL reads per second + cURL reads per second&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Total Transactions&lt;/li&gt;&lt;ol&gt;&lt;li&gt;bucket ops transactions per sec + N1QL transactions per sec + cURL transactions per sec&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Network&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Network = Total Reads + Total Transactions&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="103" vertex="1">
                    <mxGeometry x="4300" y="920" width="1590" height="1070" as="geometry"/>
                </mxCell>
                <mxCell id="114" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="103" source="113" target="104" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="87" value="" style="group" parent="72" vertex="1" connectable="0">
                    <mxGeometry x="2730" y="1260" width="7290" height="2360" as="geometry"/>
                </mxCell>
                <mxCell id="88" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Search Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="87" vertex="1">
                    <mxGeometry x="4380" width="220" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="89" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Max size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Max from [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Search Results Size [default constant = 112]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;document match structure [default constant = 160]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;scans per second [need to figure out as in sizing calculator this is by default 0 but is required under advance menu else RAM will be 0]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol&gt;&lt;li&gt;RAM Required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;RAM = ((Max size + Max from + Search Results size) * document match structure) / ((1024 * 1024 * 1024)) * scans per second&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="87" vertex="1">
                    <mxGeometry y="812" width="1000" height="378" as="geometry"/>
                </mxCell>
                <mxCell id="90" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="87" source="89" target="88" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="91" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;num_partitions [default constant = 1] (number of partitions are calculated for each index but currently we assume only a single index with single partition)&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;CPU Required&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;CPU = num_partitions&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="87" vertex="1">
                    <mxGeometry x="1110" y="812" width="710" height="290" as="geometry"/>
                </mxCell>
                <mxCell id="92" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="87" source="91" target="88" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="93" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Index [default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Store&amp;nbsp;[default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Include in all fields&amp;nbsp;[default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;include term vectors&amp;nbsp;[default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;docvalues&amp;nbsp;[default constant = false]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total Number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average key/id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of documents in index [source - user input (% index dataset)]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average field length [not sure about this - currently taking it equal to field length value]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;field length [default constant = 1.21]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Number of replicas [default constant = 0]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Count If all&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Count If all = boolean sum (Index + Store + Include in All Fields + Include Term Vectors + Docvalues)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Index Size&lt;/li&gt;&lt;ol&gt;&lt;li&gt;If count if all = 0:&lt;/li&gt;&lt;ol&gt;&lt;li&gt;((Total Number of documents * Average Key/Id size) + (Number of documents in index * Average field length * field length * 1.3)) / (1024 * 1024)&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;else&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;((Total Number of documents * Average Key/Id size) + (Number of documents in index * Average field length * field length * Count if all * 1.5 * field length)) / (1024 * 1024)&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;li&gt;Disk Space Required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Disk Space Required = Index Size * (Number of replicas + 1)&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="87" vertex="1">
                    <mxGeometry x="2040" y="860" width="1230" height="570" as="geometry"/>
                </mxCell>
                <mxCell id="94" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="87" source="93" target="88" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="95" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="87" vertex="1">
                    <mxGeometry x="4720" y="830" width="420" height="150" as="geometry"/>
                </mxCell>
                <mxCell id="96" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="87" source="95" target="88" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="97" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="87" vertex="1">
                    <mxGeometry x="5640" y="830" width="400" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="98" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="87" source="97" target="88" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="85" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;rounded=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;" parent="1" source="73" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-920" y="5580" as="sourcePoint"/>
                        <mxPoint x="-431" y="2864" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="102" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;rounded=1;entryX=0.53;entryY=0.979;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryPerimeter=0;" parent="1" source="88" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="5820" y="5350" as="sourcePoint"/>
                        <mxPoint x="350.0000000000015" y="2840" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="121" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;rounded=1;entryX=0.97;entryY=0.979;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryPerimeter=0;" parent="1" source="104" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="11080" y="4940" as="sourcePoint"/>
                        <mxPoint x="2060" y="2120" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="122" value="" style="group" parent="1" vertex="1" connectable="0">
                    <mxGeometry x="7620" y="4040" width="7290" height="2280" as="geometry"/>
                </mxCell>
                <mxCell id="123" value="&lt;b style=&quot;border-color: var(--border-color); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 22px;&quot;&gt;Analytics Service&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;" parent="122" vertex="1">
                    <mxGeometry x="4380" width="240" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="124" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating RAM&lt;br&gt;&lt;/span&gt;No existing calculations&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="122" vertex="1">
                    <mxGeometry x="430" y="780" width="420" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="125" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="122" source="124" target="123" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="3470" y="50" as="sourcePoint"/>
                        <mxPoint x="5175" y="-180" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="126" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating CPU&lt;br&gt;&lt;/span&gt;No existing calculations&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="122" vertex="1">
                    <mxGeometry x="1480" y="1010" width="440" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="127" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;" parent="122" source="126" target="123" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="1040" y="940" as="sourcePoint"/>
                        <mxPoint x="4635" y="30" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="128" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk Space&lt;br&gt;&lt;/span&gt;&lt;br&gt;(Need to be reviewed again)&lt;br&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; text-align: left;&quot;&gt;&lt;b&gt;INPUTS:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;ol style=&quot;font-family: Verdana; border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Total number of documents [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average Key/Id size [default constant = 0]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average document size [source - user input]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;BUCKET_TYPE [default constant = 'Couchbase']&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;% of data shadowed [not sure about this value]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Query Temporary space allowed [default constant = 2]&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Average sum of field lengths&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;% of documents in the index [source - user input]&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;OUTPUT:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;ol style=&quot;border-color: var(--border-color);&quot;&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Disk space required for linked data collection&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;Disk space req for linked data collection = Number of documents in the collection * Document Id/Key size + Average Document size + BUCKET_TYPE&lt;/li&gt;&lt;li style=&quot;border-color: var(--border-color);&quot;&gt;where BUCKET_TYPE = {'couchbase' : 56 , 'Ephemeral': 72}&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Disk space required for analytics collection&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Disk space req for analytics collection = Disk space req for linked data collection * % of data shadowed * Query Temporary space allowed&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Disk space required for analytics indexes&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Disk space req for analytics indexes = Number of documents in the collection * (Document Id/key size + Average sum of field lengths) * % of documents in the index&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;Total Disk space required&lt;/li&gt;&lt;ol&gt;&lt;li&gt;Total disk space req = Total disk space req for all collections + total disk space req for all indexes&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="122" vertex="1">
                    <mxGeometry x="2820" y="850" width="1240" height="520" as="geometry"/>
                </mxCell>
                <mxCell id="129" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="122" source="128" target="123" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="2610" y="840" as="sourcePoint"/>
                        <mxPoint x="4360" y="-100" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="130" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Disk IO&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="122" vertex="1">
                    <mxGeometry x="4720" y="830" width="420" height="150" as="geometry"/>
                </mxCell>
                <mxCell id="131" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="122" source="130" target="123" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="4230" y="850" as="sourcePoint"/>
                        <mxPoint x="4885" y="-80" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="132" value="&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: bold; font-size: 22px;&quot;&gt;Calculating Network&lt;/span&gt;&lt;br&gt;&lt;br&gt;Currently not available&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;shadow=0;glass=0;labelBackgroundColor=none;fontFamily=Verdana;fontSize=12;fontColor=default;spacing=15;" parent="122" vertex="1">
                    <mxGeometry x="5640" y="830" width="400" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="133" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;exitX=0.5;exitY=0;exitDx=0;exitDy=0;rounded=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="122" source="132" target="123" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="6590" y="770" as="sourcePoint"/>
                        <mxPoint x="5800" y="10" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="135" value="" style="endArrow=classic;startArrow=classic;html=1;labelBackgroundColor=default;strokeWidth=4;fontFamily=Verdana;fontSize=12;fontColor=default;fillColor=#1A1A1A;rounded=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="123" target="27" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="9140" y="3370" as="sourcePoint"/>
                        <mxPoint x="-267" y="2790" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="137" value="" style="endArrow=classic;html=1;entryX=0.25;entryY=1;entryDx=0;entryDy=0;exitX=0.25;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="24" target="16">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="-640" y="2190" as="sourcePoint"/>
                        <mxPoint x="-730" y="2020" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="-740" y="2230"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>